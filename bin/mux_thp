#!/usr/bin/zsh

SESSION_NAME="thp"

function load_ros_thp() {
  tmux send-keys -t ${SESSION_NAME} '. ros thp' C-m
}

tmux has-session -t ${SESSION_NAME}
if [ $? != 0 ]
then
  # Core and launch window
  tmux new-session -n core -s ${SESSION_NAME} -d
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscore' C-m

  tmux split-window -v -t ${SESSION_NAME}
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscd relational_machine_dispatcher' C-m
  tmux send-keys -t ${SESSION_NAME} 'vim demo.launch' C-m

  tmux split-window -v -t ${SESSION_NAME}
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roslaunch relational_machine_dispatcher demo.launch'

  # Vim window
  tmux new-window -t ${SESSION_NAME} -n RelMachine_vim
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscd relational_machine_dispatcher' C-m
  tmux send-keys -t ${SESSION_NAME} 'vim *.py' C-m

  tmux split-window -v -t ${SESSION_NAME}
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscd relational_machine' C-m
  tmux send-keys -t ${SESSION_NAME} 'vim *.py' C-m

  # Vim window
  tmux new-window -t ${SESSION_NAME} -n Robot_Vision_vim
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscd robot_system' C-m
  tmux send-keys -t ${SESSION_NAME} 'vim *.py' C-m

  # Vim window
  # tmux new-window -t ${SESSION_NAME} -n Vision_vim
  tmux split-window -v -t ${SESSION_NAME}
  load_ros_thp
  tmux send-keys -t ${SESSION_NAME} 'roscd vision_system' C-m
  tmux send-keys -t ${SESSION_NAME} 'vim *.py *.json' C-m

  tmux select-window -t core
fi
tmux -2 attach -t ${SESSION_NAME}

exit 0
